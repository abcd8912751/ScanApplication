apply plugin: 'com.android.library'
buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
}


android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

//Execute "gradle clean jarRelease" to cook jar.
android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name==com.android.builder.core.BuilderConstants.DEBUG) {
        return;             // Skip debug builds.
    }
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    variant.generateBuildConfigProvider.configure {
        it.enabled = true // Replacement
    }
    artifacts.add('archives', task);
}


android.libraryVariants
